
import json
import logging
import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.enums import ParseMode
from aiogram.fsm.storage.memory import MemoryStorage
from aiogram.types import WebAppInfo, ReplyKeyboardMarkup, KeyboardButton
from aiogram.client.default import DefaultBotProperties
from aiogram.filters import Command
from aiogram import F

API_TOKEN = '7592882454:AAEbeRBkrtGNK41HcyVOVZ8PYIHLuYoGD1g'
MANAGER_CHAT_ID = 1812480625

bot = Bot(token=API_TOKEN, default=DefaultBotProperties(parse_mode=ParseMode.MARKDOWN))
dp = Dispatcher(storage=MemoryStorage())

def get_main_keyboard():
    return ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="üöÄ –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑", web_app=WebAppInfo(url="https://olimpshop49.netlify.app/"))],
            [KeyboardButton(text="üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã"), KeyboardButton(text="üïí –†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã")]
        ],
        resize_keyboard=True
    )

@dp.message(Command("start"))
async def cmd_start(message: types.Message):
    username = message.from_user.username or message.from_user.first_name
    await message.answer(
        f"üî• *–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ OlimpShop49, {username}!* üî•\n\n"
        "üíé –ü—Ä–µ–º–∏—É–º —Ç–æ–≤–∞—Ä—ã —Å –±—ã—Å—Ç—Ä–æ–π –¥–æ—Å—Ç–∞–≤–∫–æ–π\n"
        "‚ö° –õ—É—á—à–∏–µ —Ü–µ–Ω—ã –≤ —Ç–≤–æ–µ–º —Ä–∞–π–æ–Ω–µ\n"
        "üîê –ì–∞—Ä–∞–Ω—Ç–∏—è –∫–∞—á–µ—Å—Ç–≤–∞ –∏ –∞–Ω–æ–Ω–∏–º–Ω–æ—Å—Ç–∏\n\n"
        "–ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –ø–æ–∫—É–ø–∫–∏!",
        reply_markup=get_main_keyboard()
    )

@dp.message(F.text == "üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã")
async def contacts(message: types.Message):
    await message.answer(
        "üìû *–ö–û–ù–¢–ê–ö–¢–´ OlimpShop49* üìû\n\n"
        "üîπ –¢–µ–ª–µ–≥—Ä–∞–º: @olimpmagadan\n"
        "üîπ –¢–µ–ª–µ—Ñ–æ–Ω: +7 (XXX) XXX-XX-XX (—Ç–æ–ª—å–∫–æ –¥–ª—è –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö)\n"
        "üîπ –ê–¥—Ä–µ—Å: —É–ª. –û–ª–∏–º–ø–∞, –¥–æ–º –ì—Ä–æ–º–æ–≤–µ—Ä–∂—Ü–∞\n\n"
        "‚ö° *–ó–µ–≤—Å –≤—Å–µ–≥–¥–∞ –Ω–∞ —Å–≤—è–∑–∏!* ‚ö°\n"
        "–ü–∏—à–∏ - –Ω–µ —Å—Ç–µ—Å–Ω—è–π—Å—è, –æ—Ç–≤–µ—á–∞–µ–º –±—ã—Å—Ç—Ä–µ–µ –º–æ–ª–Ω–∏–∏!",
        reply_markup=get_main_keyboard()
    )

@dp.message(F.text == "üïí –†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã")
async def working_hours(message: types.Message):
    await message.answer(
        "‚è∞ *–†–ï–ñ–ò–ú –†–ê–ë–û–¢–´* ‚è∞\n\n"
        "‚ñ´Ô∏è –ü–Ω-–ü—Ç: 10:00 - 22:00 (–∫–æ–≥–¥–∞ –ó–µ–≤—Å –Ω–µ –ø—å—ë—Ç –∞–º–±—Ä–æ–∑–∏—é)\n"
        "‚ñ´Ô∏è –°–±-–í—Å: 12:00 - 00:00 (–Ω–æ—á–Ω—ã–µ –º–æ–ª–Ω–∏–∏ - –Ω–∞—à–µ –≤—Å—ë)\n\n"
        "‚ö° *–î–æ—Å—Ç–∞–≤–ª—è–µ–º –±–µ–∑ –≤—ã—Ö–æ–¥–Ω—ã—Ö –∏ –ø—Ä–∞–∑–¥–Ω–∏–∫–æ–≤!* ‚ö°\n"
        "–î–∞–∂–µ –µ—Å–ª–∏ —Å–∞–º –ì–µ—Ä–∞–∫–ª —Å–∫–∞–∑–∞–ª, —á—Ç–æ —Å–µ–≥–æ–¥–Ω—è –≤—ã—Ö–æ–¥–Ω–æ–π!",
        reply_markup=get_main_keyboard()
    )

@dp.message(F.web_app_data)
async def handle_webapp_data(message: types.Message):
    try:
        data = json.loads(message.web_app_data.data)
        items = data.get('items', [])

        if not items:
            await message.answer("‚ùó –û—à–∏–±–∫–∞: –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞. –í–∏–¥–∏–º–æ, —Ç—ã –ø–µ—Ä–µ–¥—É–º–∞–ª —Ç—Ä–∞—Ç–∏—Ç—å –¥–µ–Ω—å–≥–∏, —Å–ª–∞–±–∞–∫!")
            return

        items_text = "\n".join(
            f"‚ñ´ {item['name']} | –í–∫—É—Å: *{item.get('flavor', '–Ω–µ —É–∫–∞–∑–∞–Ω')}* | –ö–æ–ª-–≤–æ: {item['qty']} | –°—É–º–º–∞: {item['price'] * item['qty']}‚ÇΩ"
            for item in items
        )

        address = data.get('address', '–ù–µ —É–∫–∞–∑–∞–Ω')
        district = data.get('district', '–ù–µ —É–∫–∞–∑–∞–Ω')
        total = data.get('total', 0)
        username = message.from_user.username or message.from_user.first_name

        # –°–æ–æ–±—â–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç—É
        await message.answer(
            f"‚úÖ *–¢–≤–æ–π –∑–∞–∫–∞–∑ –ø—Ä–∏–Ω—è—Ç, —Å–º–µ—Ä—Ç–Ω—ã–π!*\n\n"
            f"{items_text}\n\n"
            f"üìç –†–∞–π–æ–Ω: {district}\n"
            f"üè† –ê–¥—Ä–µ—Å: {address}\n"
            f"üí∞ –ò—Ç–æ–≥–æ: *{total} ‚ÇΩ*\n\n"
            f"–ì–µ—Ä–º–µ—Å —É–∂–µ –ª–µ—Ç–∏—Ç –∫ —Ç–µ–±–µ —Å –ø–æ—Å—ã–ª–∫–æ–π! –û–∂–∏–¥–∞–π –∑–≤–æ–Ω–∫–∞ –æ—Ç –Ω–∞—à–µ–≥–æ –∫—É—Ä—å–µ—Ä–∞.",
            reply_markup=get_main_keyboard()
        )

        # –°–æ–æ–±—â–µ–Ω–∏–µ –º–µ–Ω–µ–¥–∂–µ—Ä—É
        await bot.send_message(
            chat_id=MANAGER_CHAT_ID,
            text=(
                f"‚ö° *–ù–û–í–´–ô –ó–ê–ö–ê–ó! –ì–æ—Ç–æ–≤—å –º–æ–ª–Ω–∏–∏!* ‚ö°\n\n"
                f"{items_text}\n\n"
                f"üìç –†–∞–π–æ–Ω: {district}\n"
                f"üè† –ê–¥—Ä–µ—Å: {address}\n"
                f"üí∞ –°—É–º–º–∞: *{total} ‚ÇΩ*\n"
                f"üë§ –û—Ç: @{username}\n\n"
                f"–ë—ã—Å—Ç—Ä–µ–µ –≤–µ—Ç—Ä–∞, –∫—É—Ä—å–µ—Ä! –ö–ª–∏–µ–Ω—Ç –∂–¥—ë—Ç!"
            )
        )

    except Exception as e:
        logging.exception("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ WebAppData")
        await message.answer(
            "‚ö† –ë–æ–≥–∏ –û–ª–∏–º–ø–∞ —Ä–∞–∑–≥–Ω–µ–≤–∞–Ω—ã! –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–∫–∞–∑–∞.\n"
            "–ü–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑ –∏–ª–∏ –Ω–∞–ø–∏—à–∏ –Ω–∞–º –≤ @olimpmagadan",
            reply_markup=get_main_keyboard()
        )

async def main():
    await dp.start_polling(bot)

if __name__ == '__main__':
    asyncio.run(main())
